///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2022-2025, ООО 1С-Рарус
// Все права защищены. Эта программа и сопроводительные материалы предоставляются
// в соответствии с условиями лицензии Attribution-ShareAlike 4.0 International (CC BY-SA 4.0)
// Текст лицензии доступен по ссылке:
// https://creativecommons.org/licenses/by-sa/4.0/
///////////////////////////////////////////////////////////////////////////////////////////////////////

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	// BSLLS:UnusedLocalVariable-off
	ВидСУБД = "1С";
	// BSLLS:UnusedLocalVariable-on

	Параметры.Свойство("ГруппаМетаданных", ГруппаМетаданных);
	Параметры.Свойство("ПрефиксЗапроса", ПрефиксЗапроса);
	Параметры.Свойство("ИмяОбъекта", ИмяОбъекта);
	Параметры.Свойство("ТекущийОбъект", ТекущийОбъект);
	Параметры.Свойство("АдресСтруктурыХраненияБазы", АдресСтруктурыХраненияБазы);

	УстановитьПрефиксТаблицы();

	УстановитьСмещениеДат();

	ЗаполнитьТекстыЗапросов();

	УстановитьВидимостьДоступность();

КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)

	ЗаписатьОперациюБизнесСтатистики("ОткрытиеГенератораТекстаЗапросов");

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ВидСУБДПриИзменении(Элемент)

	УстановитьПрефиксТаблицы();

	УстановитьСмещениеДат();

	ЗаполнитьТекстыЗапросов();

	УстановитьВидимостьДоступность();

КонецПроцедуры

&НаКлиенте
Процедура ПредставленияПолейПриИзменении(Элемент)

	ЗаполнитьТекстыЗапросов();

КонецПроцедуры

&НаКлиенте
Процедура ПрефиксТаблицыПриИзменении(Элемент)

	ЗаполнитьТекстыЗапросов();

КонецПроцедуры

&НаКлиенте
Процедура СмещениеДатПриИзменении(Элемент)

	ЗаполнитьТекстыЗапросов();

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура КопироватьВБуфер(Команда)

	#Если НЕ ВебКлиент Тогда
		СисИнфо = Новый СистемнаяИнформация;

		Если СисИнфо.ТипПлатформы = ТипПлатформы.Linux_x86
			Или СисИнфо.ТипПлатформы = ТипПлатформы.Linux_x86_64 Тогда
				Возврат;
		КонецЕсли;

		ТекстВыражения = "Элементы.ТекстЗапроса.УстановитьГраницыВыделения(1, СтрДлина(ТекстЗапроса));
		|
		|ТекущийЭлемент = Элементы.ТекстЗапроса;
		|
		|СкриптWSH = Новый COMОбъект(""WScript.Shell"");
		|СкриптWSH.SendKeys(""^(C)"");
		|
		|ПоказатьОповещениеПользователя(НСтр(""ru = 'Скопировано в буфер обмена'""));";

		Выполнить(ТекстВыражения);
	#КонецЕсли

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьВидимостьДоступность()

	Если ВидСУБД = "MSSQL" Или ВидСУБД = "PostgreSQL" Тогда
		Элементы.ПрефиксТаблицы.Доступность = Истина;
		Элементы.СмещениеДат.Доступность = Истина;
	Иначе
		Элементы.ПрефиксТаблицы.Доступность = Ложь;
		Элементы.СмещениеДат.Доступность = Ложь;
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура УстановитьПрефиксТаблицы()

	// BSLLS:UnusedLocalVariable-off
	Если ВидСУБД = "MSSQL" Тогда
		ПрефиксТаблицы = "[ИмяБД].[dbo].";
	ИначеЕсли ВидСУБД = "PostgreSQL" Тогда
		ПрефиксТаблицы = "public.";
	Иначе
		ПрефиксТаблицы = "";
	КонецЕсли;
	// BSLLS:UnusedLocalVariable-on

КонецПроцедуры

&НаСервере
Процедура УстановитьСмещениеДат()

	// BSLLS:UnusedLocalVariable-off
	Если ВидСУБД = "MSSQL" Тогда
		СмещениеДат = 2000;
	Иначе
		СмещениеДат = 0;
	КонецЕсли;
	// BSLLS:UnusedLocalVariable-on

КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТекстыЗапросов()

	СтруктураХраненияБазы = ПолучитьИзВременногоХранилища(АдресСтруктурыХраненияБазы);

	ТекстЗапроса = "";
	ПараметрыЗапроса = Новый Структура();

	ПолноеИмяМетаданного = ПрефиксЗапроса + "." + ИмяОбъекта;

	Для Каждого ОписаниеТаблицы Из СтруктураХраненияБазы Цикл
		Если Лев(ОписаниеТаблицы.ИмяТаблицы, СтрДлина(ПолноеИмяМетаданного)) <> ПолноеИмяМетаданного Тогда
			Продолжить;
		КонецЕсли;

		ОсновнаяТаблица = ОписаниеТаблицы.ИмяТаблицы = ПолноеИмяМетаданного;

		ТекстЗапроса = ТекстЗапроса + ?(ТекстЗапроса = "", "", РазделительТекстовЗапросов())
			+ ТекстТекущейТаблицы(ОписаниеТаблицы, ПолноеИмяМетаданного, ОсновнаяТаблица, ПараметрыЗапроса);
	КонецЦикла;

	Если ВидСУБД = "XML" Тогда
		ДанныеДляКонсоли = Новый Структура("Текст, Параметры", ТекстЗапроса, ПараметрыЗапроса);

		ЗаписьXML = Новый ЗаписьXML;
		ЗаписьXML.УстановитьСтроку();
		СериализаторXDTO.ЗаписатьXML(ЗаписьXML, ДанныеДляКонсоли, НазначениеТипаXML.Явное);
		ТекстЗапроса = ЗаписьXML.Закрыть();
	КонецЕсли;

КонецПроцедуры

&НаСервере
Функция РазделительТекстовЗапросов()

	Возврат "
	|;
	|
	|";

КонецФункции

&НаСервере
Функция ПолучитьПоляТаблицыДляЗапроса(ОписаниеТаблицы, ПолноеИмяМетаданного)

	ПоляТаблицы = Новый ТаблицаЗначений();
	ПоляТаблицы.Колонки.Добавить("Имя", Новый ОписаниеТипов("Строка"));
	ПоляТаблицы.Колонки.Добавить("Представление", Новый ОписаниеТипов("Строка"));

	Для Каждого ТекущееПоле Из ОписаниеТаблицы.Поля Цикл
		Если ((ВидСУБД = "MSSQL" Или ВидСУБД = "PostgreSQL") И ПустаяСтрока(ТекущееПоле.ИмяПоляХранения))
			Или ((ВидСУБД = "1С" Или ВидСУБД = "XML") И ПустаяСтрока(ТекущееПоле.ИмяПоля)) Тогда

			Продолжить;
		КонецЕсли;

		Если (ВидСУБД = "1С" Или ВидСУБД = "XML") И ЗначениеЗаполнено(ТекущееПоле.Метаданные) Тогда
			ВыводитьРеквизит = Ложь;

			Если Лев(ТекущееПоле.Метаданные, СтрДлина(ПолноеИмяМетаданного)) = ПолноеИмяМетаданного Тогда
				ВыводитьРеквизит = Истина;
			КонецЕсли;

			Если Лев(ТекущееПоле.Метаданные, СтрДлина("ОбщийРеквизит.")) = "ОбщийРеквизит." Тогда
				ИмяРеквизита = Сред(ТекущееПоле.Метаданные, СтрДлина("ОбщийРеквизит.") + 1);

				ВариантыИспользованияРеквизита = Метаданные.СвойстваОбъектов.ИспользованиеОбщегоРеквизита;
				ВариантыАвтоИспользованияРеквизита = Метаданные.СвойстваОбъектов.АвтоИспользованиеОбщегоРеквизита;
				ВариантыРазделениеДанных = Метаданные.СвойстваОбъектов.РазделениеДанныхОбщегоРеквизита;

				ОбщийРеквизит = Метаданные.ОбщиеРеквизиты[ИмяРеквизита];

				Если ОбщийРеквизит.РазделениеДанных = ВариантыРазделениеДанных.Разделять Тогда
					Если Не ПараметрыСеанса[ОбщийРеквизит.ИспользованиеРазделенияДанных.Имя] Тогда
						Продолжить;
					КонецЕсли;
				КонецЕсли;

				НастройкаДляОбъекта = ОбщийРеквизит.Состав.Найти(Метаданные[ГруппаМетаданных][ИмяОбъекта]);

				Если НастройкаДляОбъекта.Использование = ВариантыИспользованияРеквизита.Использовать
					Или (НастройкаДляОбъекта.Использование = ВариантыИспользованияРеквизита.Авто
					И ОбщийРеквизит.АвтоИспользование = ВариантыАвтоИспользованияРеквизита.Использовать) Тогда

					ВыводитьРеквизит = Истина;
				КонецЕсли;
			КонецЕсли;

			Если Не ВыводитьРеквизит Тогда
				Продолжить;
			КонецЕсли;
		КонецЕсли;

		ОписаниеПоля = ПоляТаблицы.Добавить();

		Если (ВидСУБД = "1С" Или ВидСУБД = "XML") Тогда
			ОписаниеПоля.Имя = "Т." + ТекущееПоле.ИмяПоля;

			Если ПредставленияПолей = 1 Тогда
				ОписаниеПоля.Представление = ТекущееПоле.ИмяПоля;

			Иначе
				Если Прав(ТекущееПоле.ИмяПоляХранения, СтрДлина("_TYPE")) = "_TYPE" Тогда
					ОписаниеПоля.Представление = Лев(
						ТекущееПоле.ИмяПоляХранения,
						СтрДлина(ТекущееПоле.ИмяПоляХранения) - СтрДлина("_TYPE"));

				ИначеЕсли Прав(ТекущееПоле.ИмяПоляХранения, СтрДлина("_L")) = "_L" Тогда
					ОписаниеПоля.Представление = Лев(
						ТекущееПоле.ИмяПоляХранения,
						СтрДлина(ТекущееПоле.ИмяПоляХранения) - СтрДлина("_L"));

				ИначеЕсли Прав(ТекущееПоле.ИмяПоляХранения, СтрДлина("_N")) = "_N" Тогда
					ОписаниеПоля.Представление = Лев(
						ТекущееПоле.ИмяПоляХранения,
						СтрДлина(ТекущееПоле.ИмяПоляХранения) - СтрДлина("_N"));

				ИначеЕсли Прав(ТекущееПоле.ИмяПоляХранения, СтрДлина("_T")) = "_T" Тогда
					ОписаниеПоля.Представление = Лев(
						ТекущееПоле.ИмяПоляХранения,
						СтрДлина(ТекущееПоле.ИмяПоляХранения) - СтрДлина("_T"));

				ИначеЕсли Прав(ТекущееПоле.ИмяПоляХранения, СтрДлина("_S")) = "_S" Тогда
					ОписаниеПоля.Представление = Лев(
						ТекущееПоле.ИмяПоляХранения,
						СтрДлина(ТекущееПоле.ИмяПоляХранения) - СтрДлина("_S"));

				ИначеЕсли Прав(ТекущееПоле.ИмяПоляХранения, СтрДлина("_RRRef")) = "_RRRef" Тогда
					ОписаниеПоля.Представление = Лев(
						ТекущееПоле.ИмяПоляХранения,
						СтрДлина(ТекущееПоле.ИмяПоляХранения) - СтрДлина("_RRRef"));

				Иначе
					ОписаниеПоля.Представление = ТекущееПоле.ИмяПоляХранения;
				КонецЕсли;
			КонецЕсли;

		Иначе
			ОписаниеПоля.Имя = "Т." + ТекущееПоле.ИмяПоляХранения;

			Если ПредставленияПолей = 1 Тогда
				Если Прав(ТекущееПоле.ИмяПоляХранения, СтрДлина("_TYPE")) = "_TYPE" Тогда
					ОписаниеПоля.Представление = ТекущееПоле.ИмяПоля + "_TYPE";

				ИначеЕсли Прав(ТекущееПоле.ИмяПоляХранения, СтрДлина("_L")) = "_L" Тогда
					ОписаниеПоля.Представление = ТекущееПоле.ИмяПоля + "_L";

				ИначеЕсли Прав(ТекущееПоле.ИмяПоляХранения, СтрДлина("_N")) = "_N" Тогда
					ОписаниеПоля.Представление = ТекущееПоле.ИмяПоля + "_N";

				ИначеЕсли Прав(ТекущееПоле.ИмяПоляХранения, СтрДлина("_T")) = "_T" Тогда
					ОписаниеПоля.Представление = ТекущееПоле.ИмяПоля + "_T";

				ИначеЕсли Прав(ТекущееПоле.ИмяПоляХранения, СтрДлина("_S")) = "_S" Тогда
					ОписаниеПоля.Представление = ТекущееПоле.ИмяПоля + "_S";

				ИначеЕсли Прав(ТекущееПоле.ИмяПоляХранения, СтрДлина("_RRRef")) = "_RRRef" Тогда
					ОписаниеПоля.Представление = ТекущееПоле.ИмяПоля + "_RRRef";

				Иначе
					ОписаниеПоля.Представление = ТекущееПоле.ИмяПоля;
				КонецЕсли;

			Иначе
				ОписаниеПоля.Представление = ТекущееПоле.ИмяПоляХранения;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;

	ПоляТаблицы.Свернуть("Имя, Представление");

	Возврат ПоляТаблицы;

КонецФункции

&НаСервере
Функция ТекстТекущейТаблицы(ОписаниеТаблицы, ПолноеИмяМетаданного, ОсновнаяТаблица, ПараметрыЗапроса)

	ТекстТекущейТаблицы = ПолучитьКомментарийВЗапросе(ОписаниеТаблицы.ИмяТаблицы, Истина);

	Если ВидСУБД = "MSSQL" Или ВидСУБД = "PostgreSQL" Тогда
		ТекстТекущейТаблицы = ТекстТекущейТаблицы + Символы.ПС + "SELECT";
	Иначе
		ТекстТекущейТаблицы = ТекстТекущейТаблицы + Символы.ПС + "ВЫБРАТЬ";
	КонецЕсли;

	ПоляТаблицы = ПолучитьПоляТаблицыДляЗапроса(ОписаниеТаблицы, ПолноеИмяМетаданного);

	МаксимальныйИндекс = ПоляТаблицы.Количество() - 1;
	Для Сч = 0 По МаксимальныйИндекс Цикл
		ТекстТекущейТаблицы = ТекстТекущейТаблицы + Символы.ПС + Символы.Таб
			+ ПоляТаблицы[Сч].Имя
			+ ?((ВидСУБД = "1С" Или ВидСУБД = "XML"), " КАК ", " AS ")
			+ ПоляТаблицы[Сч].Представление
			+ ?(Сч = МаксимальныйИндекс, "", ",");
	КонецЦикла;

	Если (ВидСУБД = "1С" Или ВидСУБД = "XML") Тогда
		ТекстТекущейТаблицы = ТекстТекущейТаблицы + Символы.ПС + "ИЗ " + ОписаниеТаблицы.ИмяТаблицы + " КАК Т";
	Иначе
		ТекстТекущейТаблицы = ТекстТекущейТаблицы + Символы.ПС + "FROM "
			+ ПрефиксТаблицы + ОписаниеТаблицы.ИмяТаблицыХранения;
	КонецЕсли;

	ПоляУсловий = Новый Массив();

	Если ГруппаМетаданных = "Константы" Тогда // BSLLS:EmptyCodeBlock-off
		// Без условий.

	ИначеЕсли ГруппаМетаданных = "РегистрыСведений" Тогда
		ОбъектМетаданных = Метаданные[ГруппаМетаданных][ИмяОбъекта];

		МенеджерЗаписи = РегистрыСведений[ИмяОбъекта].СоздатьМенеджерЗаписи();
		ЗаполнитьЗначенияСвойств(МенеджерЗаписи, ТекущийОбъект);
		МенеджерЗаписи.Прочитать();

		Для Каждого Элемент Из ОбъектМетаданных.СтандартныеРеквизиты Цикл
			ДобавитьПолеУсловий(ПоляТаблицы, ПоляУсловий, Элемент.Имя, МенеджерЗаписи[Элемент.Имя], ПараметрыЗапроса);
		КонецЦикла;

		Для Каждого Элемент Из ОбъектМетаданных.Измерения Цикл
			ДобавитьПолеУсловий(ПоляТаблицы, ПоляУсловий, Элемент.Имя, МенеджерЗаписи[Элемент.Имя], ПараметрыЗапроса);
		КонецЦикла;

	Иначе
		ДобавитьПолеУсловий(ПоляТаблицы, ПоляУсловий, "Ссылка", ТекущийОбъект, ПараметрыЗапроса);
	КонецЕсли;

	ТекстТекущейТаблицы = ТекстТекущейТаблицы + ТекстУсловийОтбора(ПоляУсловий, ОписаниеТаблицы.Поля);

	Возврат ТекстТекущейТаблицы;

КонецФункции

&НаСервере
Процедура ДобавитьПолеУсловий(ПоляТаблицы, ПоляУсловий, ЛевоеЗначение, ПравоеЗначение, ПараметрыЗапроса)

	ДобавитьПоле = Ложь;

	Для Каждого ОписаниеПоля Из ПоляТаблицы Цикл
		Если ОписаниеПоля.Представление = ЛевоеЗначение Тогда
			ДобавитьПоле = Истина;
			Прервать;
		КонецЕсли;
	КонецЦикла;

	Если Не ДобавитьПоле Тогда
		Возврат;
	КонецЕсли;

	ПолеУсловия = Новый Структура();
	ПолеУсловия.Вставить("ЛевоеЗначение", ЛевоеЗначение);
	ПолеУсловия.Вставить("ПравоеЗначение", ПравоеЗначение);
	ПоляУсловий.Добавить(ПолеУсловия);

	ПараметрыЗапроса.Вставить(ЛевоеЗначение, ПравоеЗначение);

КонецПроцедуры

&НаСервере
Функция ТекстУсловийОтбора(ПоляУсловий, ПоляВСУБД)

	ТекстУсловий = "";

	Для Каждого Условие Из ПоляУсловий Цикл
		Если ВидСУБД = "MSSQL" Или ВидСУБД = "PostgreSQL" Тогда
			ПолеСУБД = Новый Массив();

			Для Каждого Поле Из ПоляВСУБД Цикл
				Если Поле.ИмяПоля = Условие.ЛевоеЗначение Тогда
					ПолеСУБД.Добавить(Поле.ИмяПоляХранения);
				КонецЕсли;
			КонецЦикла;

			Если ПолеСУБД.Количество() = 1 Тогда
				Условие.Вставить("ЛевоеЗначениеСУБД", ПолеСУБД[0]);

			Иначе
				Если ТипЗнч(Условие.ПравоеЗначение) = Тип("Булево") Тогда
					СуффиксТипа = "_L";
				ИначеЕсли ТипЗнч(Условие.ПравоеЗначение) = Тип("Строка") Тогда
					СуффиксТипа = "_S";
				ИначеЕсли ТипЗнч(Условие.ПравоеЗначение) = Тип("Число") Тогда
					СуффиксТипа = "_N";
				ИначеЕсли ТипЗнч(Условие.ПравоеЗначение) = Тип("Дата") Тогда
					СуффиксТипа = "_T";
				Иначе
					СуффиксТипа = "_RRREF";
				КонецЕсли;

				ДлинаСуффиксаТипа = СтрДлина("_TYPE");

				Для Каждого ВариантПоля Из ПолеСУБД Цикл
					Если Прав(ВРег(ВариантПоля), ДлинаСуффиксаТипа) = "_TYPE" Тогда
						Условие.Вставить(
							"ЛевоеЗначениеСУБД",
							Лев(ПолеСУБД[0], СтрДлина(ПолеСУБД[0]) - ДлинаСуффиксаТипа) + СуффиксТипа);
						Прервать;
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;

			Если ВидСУБД = "MSSQL" Тогда
				ПравоеЗначениеСУБД = ПравоеЗначениеСУБД_MSSQL(Условие.ПравоеЗначение);
				Условие.Вставить("ПравоеЗначениеСУБД", ПравоеЗначениеСУБД);
			Иначе
				ЛевоеЗначениеСУБД = Условие.ЛевоеЗначениеСУБД;
				ПравоеЗначениеСУБД = ПравоеЗначениеСУБД_PGSQL(Условие.ПравоеЗначение, ЛевоеЗначениеСУБД);
				Условие.Вставить("ЛевоеЗначениеСУБД", ЛевоеЗначениеСУБД);
				Условие.Вставить("ПравоеЗначениеСУБД", ПравоеЗначениеСУБД);
			КонецЕсли;

		Иначе
			ПравоеЗначениеСУБД = ПравоеЗначениеСУБД_1С(Условие.ПравоеЗначение,	Условие.ЛевоеЗначение);
			Условие.Вставить("ЛевоеЗначениеСУБД", Условие.ЛевоеЗначение);
			Условие.Вставить("ПравоеЗначениеСУБД", ПравоеЗначениеСУБД);
		КонецЕсли;
	КонецЦикла;

	Для Каждого Условие Из ПоляУсловий Цикл
		Если (ВидСУБД = "1С" Или ВидСУБД = "XML") Тогда
			Если ПустаяСтрока(ТекстУсловий) Тогда
				ТекстУсловий = Символы.ПС + "ГДЕ" + Символы.ПС + Символы.Таб;
			Иначе
				ТекстУсловий = ТекстУсловий + Символы.ПС + Символы.Таб + "И ";
			КонецЕсли;

		Иначе
			Если ПустаяСтрока(ТекстУсловий) Тогда
				ТекстУсловий = Символы.ПС + "WHERE ";
			Иначе
				ТекстУсловий = ТекстУсловий + Символы.ПС + Символы.Таб + "AND ";
			КонецЕсли;
		КонецЕсли;

		Если (ВидСУБД = "1С" Или ВидСУБД = "XML") Тогда
			ТекстУсловий = ТекстУсловий + "Т." + Условие.ЛевоеЗначениеСУБД + " = " + Условие.ПравоеЗначениеСУБД;
		Иначе
			ТекстУсловий = ТекстУсловий + Условие.ЛевоеЗначениеСУБД + " = " + Условие.ПравоеЗначениеСУБД;
		КонецЕсли;
	КонецЦикла;

	Возврат ТекстУсловий;

КонецФункции

&НаСервере
Функция ПравоеЗначениеСУБД_1С(ПравоеЗначение, ЛевоеЗначение)

	Если ТипЗнч(ПравоеЗначение) = Тип("Булево") Тогда
		Возврат Формат(ПравоеЗначение, "БЛ=ЛОЖЬ; БИ=ИСТИНА;");

	ИначеЕсли ТипЗнч(ПравоеЗначение) = Тип("Строка") Тогда
		Возврат """" + ПравоеЗначение + """";

	ИначеЕсли ТипЗнч(ПравоеЗначение) = Тип("Число") Тогда
		Возврат Формат(ПравоеЗначение, "ЧРД=.; ЧН=0; ЧГ=0;");

	ИначеЕсли ТипЗнч(ПравоеЗначение) = Тип("Дата") Тогда
		ЧастьГод = Год(ПравоеЗначение);
		ЧастьМесяц = Месяц(ПравоеЗначение);
		ЧастьДень = День(ПравоеЗначение);
		ЧастьЧас = Час(ПравоеЗначение);
		ЧастьМинута = Минута(ПравоеЗначение);
		ЧастьСекунда = Секунда(ПравоеЗначение);

		ОписаниеФорматаЧастиДаты = "ЧН=0; ЧГ=0;";

		Возврат "ДАТАВРЕМЯ(" + Формат(ЧастьГод, ОписаниеФорматаЧастиДаты)
			+ "," + Формат(ЧастьМесяц, ОписаниеФорматаЧастиДаты)
			+ "," + Формат(ЧастьДень, ОписаниеФорматаЧастиДаты)
			+ "," + Формат(ЧастьЧас, ОписаниеФорматаЧастиДаты)
			+ "," + Формат(ЧастьМинута, ОписаниеФорматаЧастиДаты)
			+ "," + Формат(ЧастьСекунда, ОписаниеФорматаЧастиДаты)
			+ ")";

	Иначе
		Возврат "&" + ЛевоеЗначение;
	КонецЕсли;

КонецФункции

&НаСервере
Функция ПравоеЗначениеСУБД_MSSQL(ПравоеЗначение)

	Если ТипЗнч(ПравоеЗначение) = Тип("Булево") Тогда
		Если ПравоеЗначение Тогда
			Возврат "CONVERT(VARBINARY(MAX), '0x01', 1)";
		Иначе
			Возврат "CONVERT(VARBINARY(MAX), '0x00', 1)";
		КонецЕсли;

	ИначеЕсли ТипЗнч(ПравоеЗначение) = Тип("Строка") Тогда
		Возврат "'" + ПравоеЗначение + "'";

	ИначеЕсли ТипЗнч(ПравоеЗначение) = Тип("Число") Тогда
		Возврат Формат(ПравоеЗначение, "ЧРД=.; ЧН=0; ЧГ=0;");

	ИначеЕсли ТипЗнч(ПравоеЗначение) = Тип("Дата") Тогда
		ЧастьГод = Год(ПравоеЗначение) + СмещениеДат;
		ЧастьМесяц = Месяц(ПравоеЗначение);
		ЧастьДень = День(ПравоеЗначение);
		ЧастьЧас = Час(ПравоеЗначение);
		ЧастьМинута = Минута(ПравоеЗначение);
		ЧастьСекунда = Секунда(ПравоеЗначение);

		ФорматЧастиДаты = "ЧН=0; ЧГ=0;";

		Возврат "DATETIMEFROMPARTS(" + Формат(ЧастьГод, ФорматЧастиДаты)
			+ "," + Формат(ЧастьМесяц, ФорматЧастиДаты)
			+ "," + Формат(ЧастьДень, ФорматЧастиДаты)
			+ "," + Формат(ЧастьЧас, ФорматЧастиДаты)
			+ "," + Формат(ЧастьМинута, ФорматЧастиДаты)
			+ "," + Формат(ЧастьСекунда, ФорматЧастиДаты)
			+ ",0)";

	Иначе
		ДлинаИДСсылки = 32;
		ТекстСсылки = ПолучитьНавигационнуюСсылку(ТекущийОбъект);
		ИДСсылкиВБазе = Прав(ТекстСсылки, ДлинаИДСсылки);

		Возврат "CONVERT(VARBINARY(MAX), '0x" + ИДСсылкиВБазе + "', 1)";
	КонецЕсли;

КонецФункции

&НаСервере
Функция ПравоеЗначениеСУБД_PGSQL(ПравоеЗначение, ЛевоеЗначение)

	Если ТипЗнч(ПравоеЗначение) = Тип("Булево") Тогда
		Возврат Формат(ПравоеЗначение, "БЛ=false; БИ=true;");

	ИначеЕсли ТипЗнч(ПравоеЗначение) = Тип("Строка") Тогда
		Возврат "'" + ПравоеЗначение + "'";

	ИначеЕсли ТипЗнч(ПравоеЗначение) = Тип("Число") Тогда
		Возврат Формат(ПравоеЗначение, "ЧРД=.; ЧН=0; ЧГ=0;");

	ИначеЕсли ТипЗнч(ПравоеЗначение) = Тип("Дата") Тогда
		ЧастьГод = Год(ПравоеЗначение) + СмещениеДат;
		ЧастьМесяц = Месяц(ПравоеЗначение);
		ЧастьДень = День(ПравоеЗначение);
		ЧастьЧас = Час(ПравоеЗначение);
		ЧастьМинута = Минута(ПравоеЗначение);
		ЧастьСекунда = Секунда(ПравоеЗначение);

		ФорматГода = "ЧЦ=4; ЧН=0000; ЧВН=; ЧГ=0;";
		ФорматПрочихЧастейДаты = "ЧЦ=2; ЧН=00; ЧВН=; ЧГ=0;";

		Возврат "'" + Формат(ЧастьГод, ФорматГода)
			+ "-" + Формат(ЧастьМесяц, ФорматПрочихЧастейДаты)
			+ "-" + Формат(ЧастьДень, ФорматПрочихЧастейДаты)
			+ " " + Формат(ЧастьЧас, ФорматПрочихЧастейДаты)
			+ ":" + Формат(ЧастьМинута, ФорматПрочихЧастейДаты)
			+ ":" + Формат(ЧастьСекунда, ФорматПрочихЧастейДаты)
			+ "'";

	Иначе
		ТекстСсылки = ПолучитьНавигационнуюСсылку(ТекущийОбъект);
		ДлинаИДСсылки = 32;
		ИДСсылкиВБазе = Прав(ТекстСсылки, ДлинаИДСсылки);

		ЛевоеЗначение = "encode(" + ЛевоеЗначение + ", 'hex')";

		Возврат "'" + ИДСсылкиВБазе + "'";
	КонецЕсли;

КонецФункции

&НаСервере
Функция ПолучитьКомментарийВЗапросе(СодержимоеКомментария, ЭтоШапка = Ложь)

	ТекстКомментария = СтрШаблон("/ * %1 * /", СодержимоеКомментария);

	Если ВидСУБД = "1С" Или ВидСУБД = "XML" Тогда
		ТекстКомментария = СтрЗаменить(ТекстКомментария, "/", "//");
	КонецЕсли;

	Если ЭтоШапка Тогда
		ТекстКомментария = СтрЗаменить(ТекстКомментария, "*", "******");
	КонецЕсли;

	Возврат ТекстКомментария;

КонецФункции

&НаСервере
Процедура ЗаписатьОперациюБизнесСтатистики(Знач ИмяОперации, Знач Значение = 1, Знач Комментарий = "")

	ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
	ОбработкаОбъект.ЗаписатьОперациюБизнесСтатистики(ИмяОперации, Значение, Комментарий);

КонецПроцедуры

#КонецОбласти